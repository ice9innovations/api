{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Animal Farm ML Platform Unified API Response Schema",
  "description": "V3 unified response format aggregating all ML services with voting and special detection systems",
  "type": "object",
  "required": ["success", "image_id", "analysis_time", "image_data", "votes", "special", "results"],
  "properties": {
    "success": {
      "type": "boolean",
      "description": "Overall analysis success status"
    },
    "image_id": {
      "type": "string",
      "description": "Unique identifier for this analysis request",
      "format": "uuid"
    },
    "analysis_time": {
      "type": "number",
      "description": "Total processing time in seconds",
      "minimum": 0
    },
    "image_data": {
      "type": "object",
      "required": ["processing_method"],
      "properties": {
        "image_dimensions": {
          "type": "object",
          "properties": {
            "width": {"type": "integer", "minimum": 1},
            "height": {"type": "integer", "minimum": 1}
          },
          "required": ["width", "height"]
        },
        "processing_method": {
          "type": "string",
          "enum": ["external_url_downloaded", "file_upload", "direct_file_access"],
          "description": "How the image was processed"
        },
        "image_url": {
          "type": "string",
          "format": "uri",
          "description": "URL to processed image (for uploaded/downloaded images)"
        },
        "file_path": {
          "type": "string",
          "description": "Local file path (for direct file access)"
        },
        "original_url": {
          "type": "string",
          "format": "uri",
          "description": "Original URL if downloaded from external source"
        }
      }
    },
    "votes": {
      "type": "object",
      "required": ["consensus"],
      "properties": {
        "consensus": {
          "type": "array",
          "description": "Democratic voting results for emoji predictions with multiple service votes",
          "items": {
            "$ref": "#/definitions/EmojiPrediction"
          }
        }
      }
    },
    "special": {
      "type": "object",
      "required": ["text", "face", "nsfw"],
      "properties": {
        "text": {
          "$ref": "#/definitions/SpecialDetection",
          "description": "OCR text detection results"
        },
        "face": {
          "$ref": "#/definitions/SpecialDetection",
          "description": "Face detection results"
        },
        "nsfw": {
          "$ref": "#/definitions/SpecialDetection",
          "description": "NSFW content detection results"
        }
      }
    },
    "captions": {
      "type": "object",
      "description": "Caption generation results with CLIP similarity scoring",
      "properties": {
        "blip": {
          "$ref": "#/definitions/CaptionResult"
        },
        "llama": {
          "$ref": "#/definitions/CaptionResult"
        }
      }
    },
    "results": {
      "type": "object",
      "description": "Individual ML service results",
      "properties": {
        "blip": {"$ref": "#/definitions/ServiceResult"},
        "clip": {"$ref": "#/definitions/ServiceResult"},
        "colors": {"$ref": "#/definitions/ServiceResult"},
        "detectron2": {"$ref": "#/definitions/ServiceResult"},
        "face": {"$ref": "#/definitions/ServiceResult"},
        "inception": {"$ref": "#/definitions/ServiceResult"},
        "metadata": {"$ref": "#/definitions/ServiceResult"},
        "nsfw": {"$ref": "#/definitions/ServiceResult"},
        "ocr": {"$ref": "#/definitions/ServiceResult"},
        "ollama": {"$ref": "#/definitions/ServiceResult"},
        "rtdetr": {"$ref": "#/definitions/ServiceResult"},
        "yolo": {"$ref": "#/definitions/ServiceResult"}
      }
    },
    "service_health_summary": {
      "type": "object",
      "description": "Service health information (only included if services are degraded)",
      "properties": {
        "degraded_services": {
          "type": "array",
          "items": {"type": "string"}
        },
        "failed_count": {"type": "integer"},
        "total_services": {"type": "integer"},
        "check_health_endpoint": {"type": "string"}
      }
    }
  },
  "definitions": {
    "EmojiPrediction": {
      "type": "object",
      "required": ["emoji", "votes", "evidence_weight", "final_score", "instances", "evidence", "services"],
      "properties": {
        "emoji": {
          "type": "string",
          "description": "Unicode emoji character",
          "pattern": "^[\\u{1F600}-\\u{1F64F}\\u{1F300}-\\u{1F5FF}\\u{1F680}-\\u{1F6FF}\\u{1F1E0}-\\u{1F1FF}\\u{2600}-\\u{26FF}\\u{2700}-\\u{27BF}]+$"
        },
        "votes": {
          "type": "integer",
          "description": "Number of services that voted for this emoji",
          "minimum": 2
        },
        "evidence_weight": {
          "type": "number",
          "description": "Calculated evidence weight including consensus bonuses"
        },
        "final_score": {
          "type": "number",
          "description": "Final ranking score (votes + evidence_weight)"
        },
        "instances": {
          "type": "object",
          "required": ["count", "type"],
          "properties": {
            "count": {
              "type": "integer",
              "minimum": 1,
              "description": "Number of instances detected"
            },
            "type": {
              "type": "string",
              "enum": ["spatial", "non_spatial"],
              "description": "Whether instances have spatial coordinates"
            }
          }
        },
        "evidence": {
          "type": "object",
          "required": ["spatial", "semantic", "classification", "specialized"],
          "properties": {
            "spatial": {
              "oneOf": [
                {"type": "null"},
                {
                  "type": "object",
                  "required": ["detection_count", "avg_confidence", "instance_count"],
                  "properties": {
                    "detection_count": {"type": "integer", "minimum": 1},
                    "avg_confidence": {"type": "number", "minimum": 0, "maximum": 1},
                    "instance_count": {"type": "integer", "minimum": 1}
                  }
                }
              ]
            },
            "semantic": {
              "oneOf": [
                {"type": "null"},
                {
                  "type": "object",
                  "required": ["service_count", "words"],
                  "properties": {
                    "service_count": {"type": "integer", "minimum": 1},
                    "words": {
                      "type": "array",
                      "items": {"type": "string"}
                    }
                  }
                }
              ]
            },
            "classification": {
              "oneOf": [
                {"type": "null"},
                {
                  "type": "object",
                  "required": ["service_count"],
                  "properties": {
                    "service_count": {"type": "integer", "minimum": 1}
                  }
                }
              ]
            },
            "specialized": {
              "oneOf": [
                {"type": "null"},
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "enum": ["face", "ocr", "nsfw"]
                  }
                }
              ]
            }
          }
        },
        "services": {
          "type": "array",
          "description": "List of services that contributed votes",
          "items": {
            "type": "string",
            "enum": ["blip", "clip", "yolo", "colors", "detectron2", "face", "nsfw", "ocr", "inception", "rtdetr", "metadata", "ollama"]
          },
          "minItems": 2
        },
        "validation": {
          "type": "array",
          "description": "Validation flags from post-processing curation (optional)",
          "items": {
            "type": "string",
            "enum": ["face_confirmed", "pose_confirmed", "human_context_confirmed", "suspicious_no_humans"]
          }
        },
        "correlation": {
          "type": "array",
          "description": "Cross-service correlation flags (optional)",
          "items": {"type": "string"}
        },
        "shiny": {
          "type": "boolean",
          "description": "Whether any detections were marked as shiny (optional)"
        },
        "bounding_boxes": {
          "type": "array",
          "description": "Spatial bounding box data (only for spatial instances)",
          "items": {
            "$ref": "#/definitions/BoundingBox"
          }
        }
      }
    },
    "BoundingBox": {
      "type": "object",
      "required": ["cluster_id", "merged_bbox", "emoji", "label", "detection_count", "avg_confidence", "detections"],
      "properties": {
        "cluster_id": {
          "type": "string",
          "description": "Unique identifier for this spatial cluster"
        },
        "merged_bbox": {
          "$ref": "#/definitions/BboxCoordinates",
          "description": "Merged bounding box coordinates"
        },
        "emoji": {"type": "string"},
        "label": {"type": "string"},
        "detection_count": {
          "type": "integer",
          "minimum": 1,
          "description": "Number of services that detected this instance"
        },
        "avg_confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Average confidence across detections"
        },
        "detections": {
          "type": "array",
          "description": "Individual service detections that were merged",
          "items": {
            "type": "object",
            "required": ["service", "confidence"],
            "properties": {
              "service": {"type": "string"},
              "confidence": {"type": "number", "minimum": 0, "maximum": 1}
            }
          }
        }
      }
    },
    "BboxCoordinates": {
      "type": "object",
      "required": ["x", "y", "width", "height"],
      "properties": {
        "x": {"type": "number", "minimum": 0},
        "y": {"type": "number", "minimum": 0},
        "width": {"type": "number", "minimum": 0},
        "height": {"type": "number", "minimum": 0}
      }
    },
    "SpecialDetection": {
      "type": "object",
      "required": ["detected"],
      "properties": {
        "detected": {
          "type": "boolean",
          "description": "Whether the specialized service detected this content type"
        },
        "emoji": {
          "type": "string",
          "description": "Associated emoji (when detected)"
        },
        "confidence": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Detection confidence (when detected)"
        },
        "content": {
          "type": "string",
          "description": "Extracted content (for OCR text detection)"
        },
        "pose": {
          "type": "string",
          "description": "Detected pose (for face detection)"
        }
      }
    },
    "CaptionResult": {
      "type": "object",
      "required": ["original", "words"],
      "properties": {
        "original": {
          "type": "string",
          "description": "Generated caption text"
        },
        "words": {
          "type": "integer",
          "minimum": 0,
          "description": "Meaningful word count (excluding stopwords)"
        },
        "clip_similarity": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "CLIP similarity score for image-caption alignment"
        },
        "emoji_mappings": {
          "type": "array",
          "description": "Word-to-emoji mappings from the caption",
          "items": {
            "$ref": "#/definitions/EmojiMapping"
          }
        }
      }
    },
    "EmojiMapping": {
      "type": "object",
      "required": ["emoji", "word"],
      "properties": {
        "emoji": {"type": "string"},
        "word": {"type": "string"}
      }
    },
    "ServiceResult": {
      "type": "object",
      "required": ["success", "status", "predictions", "metadata"],
      "properties": {
        "success": {"type": "boolean"},
        "status": {
          "type": "string",
          "enum": ["success", "error", "timeout"]
        },
        "predictions": {
          "type": "array",
          "items": {"$ref": "#/definitions/ServicePrediction"}
        },
        "metadata": {
          "type": "object",
          "required": ["processing_time"],
          "properties": {
            "processing_time": {
              "type": "number",
              "minimum": 0,
              "description": "Service processing time in seconds"
            },
            "model_info": {
              "type": "object",
              "properties": {
                "framework": {"type": "string"},
                "model": {"type": "string"},
                "prompt": {"type": "string"}
              }
            }
          }
        }
      }
    },
    "ServicePrediction": {
      "type": "object",
      "description": "Individual service prediction - format varies by service type",
      "oneOf": [
        {"$ref": "#/definitions/ObjectDetectionPrediction"},
        {"$ref": "#/definitions/ClassificationPrediction"},
        {"$ref": "#/definitions/CaptionPrediction"},
        {"$ref": "#/definitions/ColorPrediction"},
        {"$ref": "#/definitions/FacePrediction"},
        {"$ref": "#/definitions/NSFWPrediction"},
        {"$ref": "#/definitions/OCRPrediction"},
        {"$ref": "#/definitions/MetadataPrediction"}
      ]
    },
    "ObjectDetectionPrediction": {
      "type": "object",
      "required": ["label", "confidence", "bbox", "emoji"],
      "properties": {
        "label": {"type": "string"},
        "confidence": {"type": "number", "minimum": 0, "maximum": 1},
        "bbox": {"$ref": "#/definitions/BboxCoordinates"},
        "emoji": {"type": "string"}
      }
    },
    "ClassificationPrediction": {
      "type": "object",
      "required": ["label", "confidence", "emoji"],
      "properties": {
        "label": {"type": "string"},
        "confidence": {"type": "number", "minimum": 0, "maximum": 1},
        "emoji": {"type": "string"}
      }
    },
    "CaptionPrediction": {
      "type": "object",
      "required": ["text", "emoji_mappings"],
      "properties": {
        "text": {"type": "string"},
        "emoji_mappings": {
          "type": "array",
          "items": {"$ref": "#/definitions/EmojiMapping"}
        }
      }
    },
    "ColorPrediction": {
      "type": "object",
      "required": ["primary", "palette"],
      "properties": {
        "primary": {
          "type": "object",
          "required": ["hex", "copic", "prismacolor", "temperature"],
          "properties": {
            "hex": {"type": "string", "pattern": "^#[0-9a-fA-F]{6}$"},
            "copic": {"type": "string"},
            "prismacolor": {"type": "string"},
            "temperature": {"type": "string", "enum": ["warm", "cool", "neutral"]}
          }
        },
        "palette": {
          "type": "object",
          "required": ["temperature", "colors"],
          "properties": {
            "temperature": {"type": "string", "enum": ["warm", "cool", "neutral"]},
            "colors": {
              "type": "array",
              "items": {
                "type": "object",
                "required": ["hex", "copic", "prismacolor", "temperature"],
                "properties": {
                  "hex": {"type": "string", "pattern": "^#[0-9a-fA-F]{6}$"},
                  "copic": {"type": "string"},
                  "prismacolor": {"type": "string"},
                  "temperature": {"type": "string", "enum": ["warm", "cool", "neutral"]}
                }
              }
            }
          }
        }
      }
    },
    "FacePrediction": {
      "type": "object",
      "required": ["label", "emoji", "confidence"],
      "properties": {
        "label": {"type": "string"},
        "emoji": {"type": "string"},
        "confidence": {"type": "number", "minimum": 0, "maximum": 1},
        "bbox": {
          "type": "array",
          "items": {"type": "number"},
          "minItems": 4,
          "maxItems": 4,
          "description": "Bounding box as [x, y, width, height]"
        },
        "properties": {
          "type": "object",
          "properties": {
            "landmarks": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "x": {"type": "number"},
                  "y": {"type": "number"},
                  "z": {"type": "number"},
                  "visibility": {"type": "number", "minimum": 0, "maximum": 1}
                }
              }
            },
            "method": {"type": "string"},
            "segmentation": {
              "type": "object",
              "properties": {
                "has_segmentation": {"type": "boolean"},
                "width": {"type": "integer"},
                "height": {"type": "integer"}
              }
            }
          }
        }
      }
    },
    "NSFWPrediction": {
      "type": "object",
      "required": ["nsfw", "confidence", "emoji"],
      "properties": {
        "nsfw": {"type": "boolean"},
        "confidence": {"type": "number", "minimum": 0, "maximum": 1},
        "emoji": {"type": "string"}
      }
    },
    "OCRPrediction": {
      "type": "object",
      "required": ["text", "has_text", "confidence", "emoji"],
      "properties": {
        "text": {"type": "string"},
        "has_text": {"type": "boolean"},
        "confidence": {"type": "number", "minimum": 0, "maximum": 1},
        "emoji": {"type": "string"},
        "emoji_mappings": {
          "type": "array",
          "items": {"$ref": "#/definitions/EmojiMapping"}
        },
        "text_regions": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["text", "confidence", "bbox"],
            "properties": {
              "text": {"type": "string"},
              "confidence": {"type": "number", "minimum": 0, "maximum": 1},
              "bbox": {"$ref": "#/definitions/BboxCoordinates"}
            }
          }
        }
      }
    },
    "MetadataPrediction": {
      "type": "object",
      "description": "Complex metadata structure - using flexible schema due to extensive nested properties",
      "properties": {
        "dimensions": {
          "type": "object",
          "properties": {
            "width": {"type": "integer"},
            "height": {"type": "integer"}
          }
        },
        "aspect_ratio": {
          "type": "object",
          "properties": {
            "category": {"type": "string"},
            "ratio": {"type": "number"}
          }
        },
        "file": {
          "type": "object",
          "properties": {
            "file_size": {"type": "integer"},
            "file_type": {"type": "string"}
          }
        },
        "image_quality": {"type": "object"},
        "color_properties": {"type": "object"},
        "composition": {"type": "object"},
        "exif_data": {"type": "object"}
      },
      "additionalProperties": true
    }
  }
}